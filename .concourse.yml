resource_types:
- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: git-clone-resource
  type: git
  webhook_token: ((cargo-spellcheck-webhook-token))
  check_every: 12h
  source:
    branch: master
    uri: https://github.com/drahnr/cargo-spellcheck.git

- name: git-rustlang-rust
  type: git
  source:
    branch: master
    uri: https://github.com/rust-lang/rust.git

- name: git-spearow-juice
  type: git
  source:
    branch: master
    uri: https://github.com/spearow/juice.git

- name: binary-releases
  type: s3
  source:
    endpoint: https://minio.spearow.io
    bucket: cargo-spellcheck-releases
    regexp: cargo-spellcheck-(.*)
    access_key_id: ((minio-access-key))
    secret_access_key: ((minio-secret-key))

- name: github-release
  type: github-release
  webhook_token: ((cargo-spellcheck-webhook-token))
  check_every: 12h
  source:
    owner: drahnr
    access_token: ((sirmergealot-github-token))
    repository:  cargo-spellcheck

- name: git-tag-resource
  type: git
  webhook_token: ((cargo-spellcheck-webhook-token))
  check_every: 12h
  source:
    tag_filter: "v[0-9]*"
    branch: master
    uri: https://github.com/drahnr/cargo-spellcheck.git

- name: git-pull-request-resource
  type: pull-request
  webhook_token: ((cargo-spellcheck-webhook-token))
  check_every: 12h
  source:
    repository: drahnr/cargo-spellcheck
    access_token: ((sirmergealot-github-token))


- name: env-glibc
  type: registry-image
  source:
    repository: quay.io/drahnr/rust-glibc-builder

jobs:
####################################################################################
#                              P U L L - R E Q U E S T
####################################################################################
  - name: pr-validate
    build_logs_to_retain: 10
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: git-pull-request-resource
        resource: git-pull-request-resource
        version: every
        trigger: true

      - get: env-glibc

      - get: git-rustlang-rust

      - get: git-spearow-juice
        params: {depth: 3}

    - in_parallel:
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: meta-check
          status: pending
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: compile
          status: pending
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: unit-tests
          status: pending
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: validate-spellcheck
          status: pending
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: validate-reflow
          status: pending
      - put: git-pull-request-resource
        params:
          path: git-pull-request-resource
          context: win64-cross-build
          status: pending

    - in_parallel:
      - task: compile-pr
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          outputs:
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export CARGO_HOME="$(pwd)/../cargo"
              export CARGO_TARGET_DIR="$(pwd)/../target"
              export EXE="${CARGO_TARGET_DIR}/release/cargo-spellcheck"

              sudo chown $(whoami): -Rf ${CARGO_HOME}
              sudo chown $(whoami): -Rf ${CARGO_TARGET_DIR}
              sudo chown $(whoami): -Rf .
              sudo chown $(whoami): -Rf ../binary

              cargo +stable build --release
              sudo cp -vf "${EXE}" "../binary/cargo-spellcheck-$(git rev-parse HEAD)"

            dir: git-pull-request-resource
          caches:
          - path: cargo
          - path: target

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: compile
            status: success
        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: compile
            status: failure

      - task: unit-tests-pr
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .
              rustc +stable --version --verbose
              cargo +stable t
            dir: git-pull-request-resource
          caches:
          - path: cargo

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: unit-tests
            status: success
        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: unit-tests
            status: failure

      - task: pr-win64-cross-build
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          run:
            path: sh
            args:
            - -exc
            - |
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .
              rustc +stable --version --verbose

              cargo build --target x86_64-pc-windows-gnu

            dir: git-pull-request-resource
          caches:
          - path: cargo

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: win64-cross-build
            status: success

        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: win64-cross-build
            status: failure

      - task: format-check
        timeout: 10m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              rustc +stable --version --verbose

              cargo +stable fmt -- --check

            dir: git-pull-request-resource

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: meta-check
            status: success

        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: meta-check
            status: failure

    - in_parallel:
      - task: validate-spellcheck-pr
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export EXE="../binary/cargo-spellcheck-$(git rev-parse HEAD)"

              sudo chown $(whoami): -f "${EXE}"
              sudo chown $(whoami): -Rf .
              sudo chmod +x "${EXE}"

              "${EXE}" --version
              "${EXE}" demo/Cargo.toml || echo "$? - Found some errors"
              "${EXE}" demo/src/main.rs || echo "$? - Found some errors"
              "${EXE}" demo/ || echo "$? - Found some errors"
              # assure pipes work
              "${EXE}" | grep -C 10 "F"
              "${EXE}" > dump

            dir: git-pull-request-resource

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: validate-spellcheck
            status: success

        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: validate-spellcheck
            status: failure

      - task: validate-reflow-pr
        timeout: 10m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-pull-request-resource
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export EXE="../binary/cargo-spellcheck-$(git rev-parse HEAD)"

              sudo chown $(whoami): -f "${EXE}"
              sudo chown $(whoami): -Rf .
              sudo chmod +x "${EXE}"

              "${EXE}" --version
              "${EXE}" reflow demo/Cargo.toml
              "${EXE}" reflow -vvvv demo/src/main.rs
              "${EXE}" reflow demo/
              "${EXE}" reflow demo/README.md
              "${EXE}"
            dir: git-pull-request-resource

        on_success:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: validate-reflow
            status: success

        on_failure:
          put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: validate-reflow
            status: failure

      - in_parallel:
        - put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: test-spearow-juice
            status: pending

        - put: git-pull-request-resource
          params:
            path: git-pull-request-resource
            context: test-rustlang-rust
            status: pending

      - in_parallel:
        - task: pr-test-on-spearow-juice
          timeout: 40m
          image: env-glibc
          config:
            platform: linux
            inputs:
            - name: binary
            - name: git-spearow-juice
            run:
              path: sh
              args:
              - -exc
              - |
                export RUST_BACKTRACE=full
                export EXE="../binary/cargo-spellcheck"
                sudo cp -vf "${EXE}"-* "${EXE}"

                sudo chown $(whoami): -f "${EXE}"
                sudo chown $(whoami): -Rf .
                sudo chmod +x "${EXE}"

                ${EXE} -vvv
              dir: git-spearow-juice


          on_success:
            put: git-pull-request-resource
            params:
              path: git-pull-request-resource
              context: test-spearow-juice
              status: success

          on_failure:
            put: git-pull-request-resource
            params:
              path: git-pull-request-resource
              context: test-spearow-juice
              status: failure


        - task: pr-test-on-rustlang-rust
          timeout: 40m
          image: env-glibc
          config:
            platform: linux
            inputs:
            - name: binary
              resource: binary-pr
              passed: [run-check]
            - name: git-rustlang-rust
            run:
              path: sh
              args:
              - -exc
              - |
                export RUST_BACKTRACE=full
                export EXE="../binary/cargo-spellcheck"
                sudo cp -vf "${EXE}"-* "${EXE}"

                sudo chown $(whoami): -f "${EXE}"
                sudo chown $(whoami): -Rf .
                sudo chmod +x "${EXE}"

                git submodule update --init
                ${EXE} -vvv
              dir: git-rustlang-rust
            caches:
            - path: cargo

          on_success:
            put: git-pull-request-resource
            params:
              path: git-pull-request-resource
              context: test-rustlang-rust
              status: success

          on_failure:
            put: git-pull-request-resource
            params:
              path: git-pull-request-resource
              context: test-rustlang-rust
              status: failure

  ####################################################################################
  #                                 M A S T E R
  ####################################################################################
  - name: master-validate
    build_logs_to_retain: 10
    public: true
    serial: true
    plan:
    - in_parallel:
      - get: env-glibc
      - get: git-repo
        resource: git-clone-resource
        trigger: true

      - get: git-rustlang-rust

      - get: git-spearow-juice
        params: {depth: 3}

    - in_parallel:
      - task: compile-master
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          outputs:
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export CARGO_HOME="$(pwd)/../cargo"
              export CARGO_TARGET_DIR="$(pwd)/../target"
              export EXE="${CARGO_TARGET_DIR}/release/cargo-spellcheck"

              sudo chown $(whoami): -Rf ${CARGO_HOME}
              sudo chown $(whoami): -Rf ${CARGO_TARGET_DIR}
              sudo chown $(whoami): -Rf .
              sudo chown $(whoami): -Rf ../binary

              cargo +stable build --release
              sudo cp -vf "${EXE}" "../binary/cargo-spellcheck-$(git rev-parse HEAD)"

            dir: git-repo
          caches:
          - path: cargo
          - path: target

      - task: win64-cross-build-master
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          run:
            path: sh
            args:
            - -exc
            - |
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .
              rustc +stable --version --verbose
              cargo build --target x86_64-pc-windows-gnu
            dir: git-repo
          caches:
          - path: cargo

      - task: unit-tests-master
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=1
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .
              rustc +stable --version --verbose
              cargo +stable t
            dir: git-repo
          caches:
          - path: cargo

      - task: validate-meta-master
        timeout: 15m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .
              rustc +stable --version --verbose

              cargo +stable fmt -- --check

            dir: git-repo
          caches:
          - path: cargo

    - in_parallel:
      - task: validate-spellcheck-master
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export EXE="../binary/cargo-spellcheck-$(git rev-parse HEAD)"

              sudo chown $(whoami): -f "${EXE}"
              sudo chown $(whoami): -Rf .
              sudo chmod +x "${EXE}"
              "${EXE}" --version
              "${EXE}" spellcheck demo/Cargo.toml
              "${EXE}" spellcheck spellcheck -vvvv demo/src/main.rs
              "${EXE}" spellcheck demo
              "${EXE}" spellcheck
              "${EXE}"

            dir: git-repo

      - task: validate-reflow-master
        timeout: 40m
        image: env-glibc
        config:
          platform: linux
          inputs:
          - name: git-repo
          - name: binary
          run:
            # user: root
            path: sh
            args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export EXE="../binary/cargo-spellcheck-$(git rev-parse HEAD)"

              sudo chown $(whoami): -f "${EXE}"
              sudo chown $(whoami): -Rf .
              sudo chmod +x "${EXE}"

              "${EXE}" --version
              "${EXE}" reflow demo/Cargo.toml
              "${EXE}" reflow -vvvv demo/src/main.rs
              "${EXE}" reflow demo/
              "${EXE}" reflow demo/README.md
              "${EXE}"
            dir: git-repo

      - in_parallel:
        - task: test-on-spearow-juice-master
          timeout: 40m
          image: env-glibc
          config:
            platform: linux
            inputs:
            - name: binary
            - name: git-spearow-juice
            run:
              path: sh
              args:
              - -exc
              - |
                export RUST_BACKTRACE=full
                export EXE="../binary/cargo-spellcheck"
                sudo cp -vf "${EXE}"-* "${EXE}"

                sudo chown $(whoami): -f "${EXE}"
                sudo chown $(whoami): -Rf .
                sudo chmod +x "${EXE}"

                "${EXE}" spellcheck -vvv

              dir: git-spearow-juice
            caches:
            - path: cargo


        - task: test-on-rustlang-rust-master
          timeout: 40m
          image: env-glibc
          config:
            platform: linux
            inputs:
            - name: binary
            - name: git-rustlang-rust
            run:
              path: sh
              args:
              - -exc
              - |
                export EXE="../binary/cargo-spellcheck"
                sudo cp -vf "${EXE}"-* "${EXE}"

                sudo chown $(whoami): -f "${EXE}"
                sudo chown $(whoami): -Rf .
                sudo chmod +x "${EXE}"

                git submodule update --init
                "${EXE}" spellcheck -vvv

              dir: git-rustlang-rust

  - name: publish-github-release
    build_logs_to_retain: 5
    public: false
    serial: true
    plan:
    - get: env-glibc
    - get: git-repo
      resource: git-tag-resource
      trigger: true

    - task: github-release
      timeout: 40m
      image: env-glibc
      config:
        platform: linux
        inputs:
        - name: git-repo
        outputs:
        - name: release-info
        caches:
        - path: cargo
        run:
          path: sh
          args:
            - -exc
            - |
              export RUST_BACKTRACE=full
              export CARGO_HOME="$(pwd)/../cargo"
              sudo chown $(whoami): -Rf ${CARGO_HOME} .

              export RI_BASE_DIR="../release-info"
              export RI_ARTIFACTS_DIR="${RI_BASE_DIR}/artifacts"
              export RI_TAG_FILE="${RI_BASE_DIR}/TAG"
              export RI_COMMITISH_FILE="${RI_BASE_DIR}/COMMITISH"
              export RI_NAME_FILE="${RI_BASE_DIR}/NAME"

              sudo install -o $(whoami) -d "${RI_BASE_DIR}" || echo "failed to create dir"
              sudo install -o $(whoami) -d "${RI_ARTIFACTS_DIR}" || echo "failed to create dir"


              git rev-parse HEAD > "${RI_COMMITISH_FILE}"
              #git log -n 1 --format="%h" HEAD > "../${RI_COMMITISH_FILE}"
              cat "${RI_COMMITISH_FILE}"

              # the v-prefixed version
              cat ./.git/ref > "${RI_TAG_FILE}"
              cat "${RI_TAG_FILE}"

              # construct cargo-spellcheck-v1.2.3
              echo "cargo-spellcheck-$(cat ./.git/ref)" > "${RI_NAME_FILE}"
              cat "${RI_NAME_FILE}"

              build() {
                  TARGET=$1;
                  EXT=$2;
                  echo "Prepping ${TARGET} ..."
                  rustup target add "${TARGET}"
                  cargo build --release --target "${TARGET}" && \
                    cp -vf "target/${TARGET}/release/cargo-spellcheck${EXT}" "${RI_ARTIFACTS_DIR}"/${TARGET}-$(cat "${RI_NAME_FILE}")"${EXT}"
                  echo "Prepped ${TARGET} ."
              }

              build x86_64-unknown-linux-gnu
              build x86_64-pc-windows-gnu .exe

          dir: git-repo

    - in_parallel:
      - put: github-release
        params:
          name: release-info/NAME
          tag: release-info/TAG
          commitish: release-info/COMMITISH
          globs:
          - release-info/artifacts/*

      - put: binary-releases
        params:
          file: ./release-info/artifacts/x86_64-unknown-linux-gnu-cargo-spellcheck-*
          acl: public-read
